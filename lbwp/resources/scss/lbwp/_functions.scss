@import "functions.type-checking";
//@import "functions.lists";

/// Two column layout for the info/cookie banner
/// Use .lbwp-info-banner selector to use the mixin
/// @author Martin Ott
@mixin lbwpInfoBannerDesktopDefaultLayout($gapBetweenTextAndButton:40px) {
	display: flex;
	align-items: flex-start;

	.info-banner-content {
		margin-right: $gapBetweenTextAndButton;
	}

	.lbwp-close-info-banner {
		white-space: nowrap;
	}
}

/// Triangle helper mixin
/// @author Hugo Giraudel
/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
/// @param {Color} $color - Triangle color
/// @param {Length} $size - Triangle size
/// @param {Length} $edgeRatio - Edge ratio
@mixin lbwpTriangle($direction, $color, $size, $edgeRatio: 1) {
  @if not index(top right bottom left, $direction) {
    @error "Direction must be either `top`, `right`, `bottom` or `left`.";
  }

  width: 0;
  height: 0;
  content: '';
  border-#{opposite-position($direction)}: ($size * $edgeRatio) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-borders;
    border-right:  $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top:    $perpendicular-borders;
  }
}

///	Top offset for ancors. Often used for ancors in layouts with a fixed header bar
/// @param {size} $offset - Offset size
@mixin lbwpAncorPositionOffset($offset, $asPseudoElement:false) {
	@if $asPseudoElement {
		content: '';
	}
	display: block;
	visibility: hidden;
	height: $offset;
	margin-top: $offset * -1;
}

///	Settings for focuspoint images
/// @param {percent} $ratioInPercent - Ratio in percent
/// @param {boolean} $delayedDisplay - Delay the display of the image, until the image position is set
/// @param {number} $displayTransition - Display transition time (seconds)
@mixin lbwpFocusPointSettings(
	$ratioInPercent: null,
	$delayedDisplay: false,
	$displayTransition: 0
) {
	// Set ratio
	@include lbwpFocusPointRatio($ratioInPercent);

	// Set display options
	.lbwp-focuspoint {
		@if ($delayedDisplay == true) {
			img {
				@include opacity(0);
				@if (type-of($displayTransition) == 'number') and ($displayTransition > 0) {
					@include transition(unquote("opacity #{$displayTransition}#{s ease-in-out}"));
				}
				&[style] {
					@include opacity(1);
				}
			}
		}
	}
}

///	Ratio for focuspoint images
/// @param {percent} $ratioInPercent - Ratio in percent
@mixin lbwpFocusPointRatio($ratioInPercent:56.25%) {
	.lbwp-focuspoint-container {
		padding-bottom: $ratioInPercent;
	}
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function lbwpUrlEncode($string) {
  $map: (
    "%": "%25",
    "<": "%3C",
    ">": "%3E",
    " ": "%20",
    "!": "%21",
    "*": "%2A",
    "'": "%27",
    '"': "%22",
    "(": "%28",
    ")": "%29",
    ";": "%3B",
    ":": "%3A",
    "@": "%40",
    "&": "%26",
    "=": "%3D",
    "+": "%2B",
    "$": "%24",
    ",": "%2C",
    "/": "%2F",
    "?": "%3F",
    "#": "%23",
    "[": "%5B",
    "]": "%5D"
  );
  $new: $string;
  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }
  @return $new;
}

// Helper for content elements (images, iframes) with a fix ratio
// options
// $useImageDefaults (bool, optional): Add defaults styles for an image
// $ratioInPercent (percent): Display ratio
@mixin lbwpRatioContainer($useImageDefaults:false,$ratioInPercent:56.25%) {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: auto;
	padding-bottom: $ratioInPercent;
	@if ($useImageDefaults) {
		img {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			margin: auto;
			width: 100%;
		}
	}
}

// fix for positioning the admin bar on small screens
@mixin lbwpFixMobileWpAdminBar($fixedForMobile:false) {
	@media screen and (max-width: 600px) {
		@if ($fixedForMobile) {
			// fixed bar
			#wpadminbar {
				position: fixed;
			}
		} @else {
			body {
				padding-top: 46px;
				// fix default <html>-!important styles
				margin-top: -46px;
			}
		}
	}
}

/*
* Extends <hr> with column layout information
*/
@mixin lbwpEditorColumnSpanningHr() {
	$hrHeight: 34px;
	hr:not([class]) {
		border: none;
		height: $hrHeight;
		margin: 20px 0;
		display: block;
		position: relative;
		&:before {
			content: '';
			position: absolute;
			left: 0;
			right: 0;
			top: calc(50% - 1px);
			height: 2px;
			background: $lbwpWpColorMain;
		}
		&:after {
			$height: $hrHeight - 6px;
			$width: 100px;
			content:'Neue Spalte';
			font-family: $lbwpWpFontFamily;
			display:block;
			position: absolute;
			left: 50%;
			left: calc(50% - #{$width / 2});
			top: calc(50% - #{$height / 2});
			height: $height;
			width: $width;
			padding: 0 10px;
			border-radius:50px;
			overflow:hidden;
			box-shadow: 0 0 0 2px #0073aa;
			background: white;
			text-align: center;
			font-size: 14px;
			font-weight: 600;
			line-height: $height;
			color: $lbwpWpColorMain;
		}
	}
}


/*
* For editor: Draws a marking around special formats
* <any>
* $captionText: Description for the format
*/
@mixin lbwpEditorFormatCaption($captionText) {
	border: 1px solid #EFEFEF;
	padding: 15px 10px 10px;
	margin-top: 24px;
	margin-bottom: 24px;
	&:before {
		content: $captionText;
		display: inline-block;
		position: absolute;
		margin-top: -25px;
    font-size: 12px;
		background: white;
		padding: 0 10px;
		color: #AAA;
		font-family: $lbwpWpFontFamily;
	}
	// Paragraph as child
	p:first-child {
		margin-top: 0;
	}
	p:last-child {
		margin-bottom: 0;
	}
}

/*
* Extends "lbwpEditorFormatCaption" for lists
* <ul>
*/
@mixin lbwpEditorListFormatCaption($captionText) {
	@include lbwpEditorFormatCaption($captionText);
	list-style-type: circle;
	display: inline-block;
	padding-left: 25px;
	&:before {
		margin-left: -15px;
	}
}

/*
* For editor: Link with button style
* <a>
*/
@mixin lbwpEditorFormatButton() {
	display: inline-block;
	text-decoration: none;
	font-weight: bold;
	border: 1px solid;
	padding: 4px 16px;
}

/*
*
*/
@mixin lbwpClearfixPseudoele() {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}

@mixin lbwpClearfix() {
	&:after {
		@include lbwpClearfixPseudoele;
	}
}

/*
* lbwpLinkStyle
*/
@mixin lbwpLinkStyle($color, $colorHover:$color) {
	&,&:visited {
		color: $color;
	}
	&:active,&:hover { color: $colorHover; }
}

/*
* Part of "lbwpHamburgerIcon" only to change color
* <any>
* @param {hex/rgb color} $color - Color of the lines
*/
@mixin lbwpHamburgerIconColor($color) {
	&, &:before, &:after {
		background: $color;
	}
}

/*
* Draws a hamburger icon
* <any>
* @param {bool} $closed - Draw a 'x' instead of 3 lines
* @param {px} $width - Icon width (width of the lines)
* @param {hex/rgb color} $color - Color of the lines
* @param {} $lineHeight - todo
* @param {} $lineSpacing - todo
*/
@mixin lbwpHamburgerIcon($closed:false, $width:35px, $color:white, $lineHeight:5px, $lineSpacing:10px) {
	position: absolute;
	top: 50%;

	&, &:before, &:after {
	  cursor: pointer;
	  border-radius: 1px;
	  height: $lineHeight;
	  width: $width;
	  position: absolute;
	  display: block;
	  content: '';
	}

	// Set color
	@include lbwpHamburgerIconColor($color);

	&:before {
	  top: $lineSpacing * -1;
	}

	&:after {
	  bottom: $lineSpacing * -1;
	}

	@if $closed == true {
		&, &:before, &:after {
			transition: all 500ms ease-in-out;
		}

		& { background: transparent; }

		&:before { top: 0; transform: rotate(45deg); }
  	&:after { top: 0; transform: rotate(-45deg); }
	}
}

/*
Editorbilder mit einer Bildbeschriftung (.wp-caption) ändern wir onload mit JS (lbwp-gallery-inline-fix.js).
Die DOM-Änderung ist leider meistens sichtbar (grösse des Bildes ändert sich). Mit diesem mixin kann soviel CSS
wie nötig generiert werden, um den Effekt zu verhindern. Das mixin muss mit einer map konfiguriert werden:
$wpImageSizes: (
	'thumbnail': (
    wpImageSize: 300, // Bildgrösse der Vorschaubilder
    displayedSize: 25% // Anzeigegrösse dieser Bildgrösse
  ),
  'medium': (
    wpImageSize: 600, // Bildgrösse «Mittelgroß»
    displayedSize: 50% // Anzeigegrösse dieser Bildgrösse
  )
);
*/
@mixin lbwpPreventOnloadEffectForWpCaptions($wpImageSizes:null) {
	@if (lbwpIsMap($wpImageSizes)) {
		@each $size, $colors in $wpImageSizes {
			$wpImageSize: nth(nth($colors, 1), 2) + 10;
			$displayedSize: nth(nth($colors, 2), 2);
			.wp-caption:not([class*="size-"]) {
				&.alignleft, &.alignright {
					&[style="max-width: #{$wpImageSize}px"] {
						width: $displayedSize;
					}
				}
			}
		}
	}
}

@mixin lbwp-table-row($height:0) {
	display: table;
	table-layout: fixed;
	width: 100%;
	@if $height > 0 {
		height: $height;
	}
	margin: 0;
	padding: 0;
	& > * {
		display: table-cell;
		vertical-align: middle;
	}
}

@mixin lbwp-content-part-margin-bottom($unit:$paragraph-margin-bottom,$breakp:$medium-up,$factor:2) {
	margin-bottom: $unit * 2;
	@media #{$breakp} {
		margin-bottom: $unit;
	}
}

@mixin lbwp-afa-hidden($focusStyles:false) {
	position: absolute;
	left: -10000px;
	top: auto;
	width: 1px;
	height: 1px;
	overflow: hidden;
	margin: 1em 0;
	@if $focusStyles {
		&:active,&:focus {
			left:0;
			width: auto;
			height: auto;
		}
	}
}

@mixin lbwp-gallery-cols($cols:1,$padding:0 10px) {
	$width: 100%;
	@if ( $cols > 0 ) {
		$width: 100 / $cols;
		.gallery-item {
			width: unquote("#{$width}% !important");
		}
	}
}

@import "functions.deprecated";